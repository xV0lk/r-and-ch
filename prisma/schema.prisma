// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

//zod schema generator
generator zod {
  provider              = "zod-prisma"
  output                = "./zod" // (default) the directory where generated zod schemas will be saved
  relationModel         = true // (default) Create and export both plain and related models.
  modelCase             = "PascalCase" // (default) Output models using pascal case (ex. UserModel, PostModel)
  modelSuffix           = "Model" // (default) Suffix to apply to your prisma models when naming Zod schemas
  useDecimalJs          = true // represent the prisma Decimal type using Decimal.js (as Prisma does)
  imports               = null // (default) will import the referenced file in generated schemas to be used via imports.someExportedVariable
  prismaJsonNullability = true // (default) uses prisma's scheme for JSON field nullability
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// SCHEMA DEFINITIONS
model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  password  String
}

model Request {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  table     Table    @relation(fields: [tableId], references: [id])
  tableId   Int
}

model Table {
  id      Int       @id @default(autoincrement())
  number  Int       @unique
  token   Token?
  request Request[]
}

model Token {
  id      Int   @id @default(autoincrement())
  table   Table @relation(fields: [tableId], references: [id])
  tableId Int   @unique
}

enum Role {
  USER
  ADMIN
}
